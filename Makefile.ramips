NAME = sing-box
COMMIT = $(shell git rev-parse --short HEAD)
# TAGS_GO120 = with_gvisor,with_dhcp,with_wireguard,with_reality_server,with_clash_api,with_quic,with_utls
TAGS_GO121 = with_ech
MY_TAGS = with_wireguard,with_reality_server,with_clash_api,with_quic,with_utls
TAGS ?= $(TAGS_GO118),$(TAGS_GO120),$(TAGS_GO121),$(MY_TAGS)

#TAGS_TEST ?= with_gvisor,with_quic,with_wireguard,with_grpc,with_ech,with_utls,with_reality_server


CGO_ENABLED ?= 0
GOOS_MIPSLE = linux
GOARCH_MIPSLE = mipsle
GOMIPS_MIPSLE = softfloat

#VERSION=$(shell CGO_ENABLED=0 GOOS=$(GOHOSTOS) GOARCH=$(GOHOSTARCH) go run ./cmd/internal/read_tag)
VERSION=$(shell go run ./cmd/internal/read_tag)
PARAMS = -v -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=$(VERSION)' -s -w -buildid="
MAIN_PARAMS = $(PARAMS) -tags $(TAGS)
MAIN = ./cmd/sing-box

build:
	@echo "Building for MIPSLE architecture..."
	@echo "CGO_ENABLED=$(CGO_ENABLED)"
	@echo "GOOS=$(GOOS_MIPSLE)"
	@echo "GOARCH=$(GOARCH_MIPSLE)"
	@echo "GOMIPS=$(GOMIPS_MIPSLE)"
	@echo "Version: $(VERSION)"
	@echo "Main Params: $(MAIN_PARAMS)"
	@echo "Running go build with the following command:"
	@echo "CGO_ENABLED=$(CGO_ENABLED) GOOS=$(GOOS_MIPSLE) GOARCH=$(GOARCH_MIPSLE) GOMIPS=$(GOMIPS_MIPSLE) go build $(MAIN_PARAMS) $(MAIN)"
	# Enable verbose debug output for the build process
	CC=mipsel-linux-gnu-gcc CGO_CFLAGS="-mabi=32 -msoft-float -march=mips32" \
        CGO_ENABLED=$(CGO_ENABLED) GOOS=$(GOOS_MIPSLE) GOARCH=$(GOARCH_MIPSLE) \
        GOMIPS=$(GOMIPS_MIPSLE) go build -x $(MAIN_PARAMS) $(MAIN)
clean:
	rm -rf sing-box
